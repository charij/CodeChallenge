@page "/replay/{gameId:string}"

@using PlanetWars.App.Data;
@using Microsoft.EntityFrameworkCore;

@inject GameDbContext dbContext;

<h1>Game @gameId</h1>

<div id="Score"></div>

<canvas id="Game" width="" height="">    
    @if (game != null)
    {
        foreach (var star in stars)
        {
            
        }

        var currentState = game.History[currentTurn];
        foreach (var planet in currentState.Planets)
        {
            
        }

        foreach (var planet in currentState.Fleets)
        {
            
        }
    }
</canvas>

@code {
    [Parameter]
    public string gameId { get; set; }

    private int currentTurn = 0;

    private Game game;

    protected override async Task OnInitializedAsync()
    {
        this.game = await dbContext.Games.FirstAsync(i => i.Id == gameId);

        return base.OnInitializedAsync();
    }

    private void Generate()
    {
        const int minRadius = 20,
                  maxRadius = 200,
                  minStars = 100,
                  maxStars = 1000,
                  minPlanets = 5,
                  maxPlanets = 30;

        var rng = new Random(game.Seed);

        var radius = rng.Next(minRadius, maxRadius);

        var stars = Enumerable
            .Range(0, rng.Next(minStars, maxStars))
            .Select(i => new { rng.Next(0, game.), rng.Next() });
    }
}